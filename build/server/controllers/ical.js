// Generated by CoffeeScript 1.7.1
var Alarm, Event, User, fs, ical, moment, multiparty, time;

time = require('time');

fs = require('fs');

moment = require('moment');

multiparty = require('multiparty');

ical = require('cozy-ical');

Event = require('../models/event');

Alarm = require('../models/alarm');

User = require('../models/user');

module.exports["export"] = function(req, res) {
  var calendar;
  calendar = Alarm.getICalCalendar();
  return Alarm.all((function(_this) {
    return function(err, alarms) {
      if (err) {
        return res.send({
          error: true,
          msg: 'Server error occurred while retrieving data'
        });
      } else {
        return Event.all(function(err, events) {
          var alarm, event, _i, _j, _len, _len1;
          if (err) {
            return res.send({
              error: true,
              msg: 'Server error occurred while retrieving data'
            });
          } else {
            if (alarms.length > 0) {
              for (_i = 0, _len = alarms.length; _i < _len; _i++) {
                alarm = alarms[_i];
                calendar.add(alarm.timezoneToIcal());
                calendar.add(alarm.toIcal());
              }
            }
            if (events.length > 0) {
              for (_j = 0, _len1 = events.length; _j < _len1; _j++) {
                event = events[_j];
                calendar.add(event.toIcal());
              }
            }
            res.header({
              'Content-Type': 'text/calendar'
            });
            return res.send(calendar.toString());
          }
        });
      }
    };
  })(this));
};

module.exports["import"] = function(req, res) {
  var form;
  form = new multiparty.Form();
  return form.parse(req, function(err, fields, files) {
    var file, parser;
    console.log(fields);
    console.log(files);
    if (files.file.length > 0) {
      file = files.file[0];
      console.log(file);
      parser = new ical.ICalParser();
      return parser.parseFile(file.path, function(err, result) {
        if (err) {
          console.log(err);
          console.log(err.message);
          return res.send({
            error: 'error occured while saving file'
          }, 500);
        } else {
          return fs.unlink(file.path, function() {
            return res.send({
              events: Event.extractEvents(result),
              alarms: Alarm.extractAlarms(result, User.timezone)
            });
          });
        }
      });
    } else {
      return res.send({
        error: 'no file sent'
      }, 500);
    }
  });
};
